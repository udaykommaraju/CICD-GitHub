name: Deploy to Cloud Run

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: ultra-dominion-464010-e0 
  SERVICE_ACCOUNT_EMAIL: github-actions@ultra-dominion-464010-e0.iam.gserviceaccount.com
  REGION: us-central1
  REPO: hello-github

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: 'projects/726366787795/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: ${{ env.SERVICE_ACCOUNT_EMAIL }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Build and Deploy to Cloud Run
        run: |
          gcloud builds submit --tag $REGION-docker.pkg.dev/$PROJECT_ID/$REPO/hello-app2
          gcloud run deploy hello-app2 \
            --image $REGION-docker.pkg.dev/$PROJECT_ID/$REPO/hello-app2 \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
        with:
         install_components: 'gke-gcloud-auth-plugin'
       # Build Docker image
      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/ultra-dominion-464010-e0/kube-repo/hello-app:latest .

      # Authenticate Docker to push to Artifact Registry
      - name: Authenticate Docker to Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet

      # Push Docker image to Artifact Registry
      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/ultra-dominion-464010-e0/kube-repo/hello-app:latest

      # Deploy to Google Kubernetes Engine
      - name: Deploy to GKE
        run: |
          # Authenticate kubectl with the GKE cluster
          gcloud container clusters get-credentials autopilot-cluster-1  --region us-central1

          # If deployment doesn't exist, create it
          if ! kubectl get deployment hello-app >/dev/null 2>&1; then
            kubectl apply -f deployment.yaml
          fi

          # Update deployment with new image
          kubectl set image deployment/hello-app hello-app=us-central1-docker.pkg.dev/ultra-dominion-464010-e0/kube-repo/hello-app:latest

          
